//using Microsoft.CodeAnalysis;
//using Microsoft.CodeAnalysis.CSharp;
//using Microsoft.CodeAnalysis.CSharp.Syntax;

//using System.Collections.Immutable;
//using System.Diagnostics;
//using System.Text;

//namespace MapperGenerator
//{
//    //[Generator]
//    public class JsonMapperGenerator //: IIncrementalGenerator
//    {


//        private static string GenerateMapper(ClassModel classModel)
//        {
//            var sb = new StringBuilder();

//            sb.AppendLine($@"// <auto-generated/>
//using System;
//using System.Text.Json;
//using System.Collections.Generic;
//using System.Linq;

//namespace {classModel.Namespace}
//{{
//    internal static class {classModel.ClassName}Mapper
//    {{
//        internal static {classModel.ClassName} FromJson(JsonElement element)
//        {{
//            var result = new {classModel.ClassName}();

//            if (element.ValueKind != JsonValueKind.Object)
//                throw new JsonException($""Expected object but got {{element.ValueKind}}"");");

//            foreach (var property in classModel.Properties)
//            {
//                sb.AppendLine($@"
//            if (element.TryGetProperty(""{property.Name}"", out var {property.Name}Element))
//            {{");

//                if (property.IsBuiltInType)
//                {
//                    sb.AppendLine(GenerateBuiltInTypeMapping(property));
//                }
//                else if (property.IsArray)
//                {
//                    sb.AppendLine(GenerateArrayMapping(property));
//                }
//                else if (property.IsReferenceType)
//                {
//                    sb.AppendLine(GenerateReferenceTypeMapping(property));
//                }

//                sb.AppendLine("            }");

//                if (!property.IsNullable)
//                {
//                    sb.AppendLine($@"            else
//            {{
//                throw new JsonException(""Required property {property.Name} not found in JSON"");
//            }}");
//                }
//            }

//            sb.AppendLine(@"
//            return result;
//        }
//    }");

//            // Only generate the public extension method for the root type (with CreateMapper attribute)
//            if (classModel.HasCreateMapperAttribute)
//            {
//                sb.AppendLine($@"
//    public static class {classModel.ClassName}JsonExtensions
//    {{
//        public static T MapTo<T>(this JsonElement element) where T : new()
//        {{
//            if (typeof(T) == typeof({classModel.ClassName}))
//            {{
//                return (T)(object){classModel.ClassName}Mapper.FromJson(element);
//            }}
//            throw new InvalidOperationException($""Cannot map to type {{typeof(T)}}"");
//        }}
//    }}");
//            }

//            sb.AppendLine("}");

//            return sb.ToString();
//        }

//        private static string GenerateBuiltInTypeMapping(PropertyModel property)
//        {
//            return property.TypeName switch
//            {
//                "string" => $"                result.{property.Name} = {property.Name}Element.GetString();",
//                "bool" => $"                result.{property.Name} = {property.Name}Element.GetBoolean();",
//                "int" => $"                result.{property.Name} = {property.Name}Element.GetInt32();",
//                "long" => $"                result.{property.Name} = {property.Name}Element.GetInt64();",
//                "float" => $"                result.{property.Name} = {property.Name}Element.GetSingle();",
//                "double" => $"                result.{property.Name} = {property.Name}Element.GetDouble();",
//                "decimal" => $"                result.{property.Name} = {property.Name}Element.GetDecimal();",
//                "System.DateTime" => $"                result.{property.Name} = {property.Name}Element.GetDateTime();",
//                _ => $"                throw new JsonException($\"Unsupported type {property.TypeName}\");"
//            };
//        }

//        private static string GenerateArrayMapping(PropertyModel property)
//        {
//            var elementType = property.TypeName.TrimEnd('[', ']');
//            return $@"                if ({property.Name}Element.ValueKind == JsonValueKind.Array)
//                {{
//                    var array = {property.Name}Element.EnumerateArray().ToArray();
//                    result.{property.Name} = new {elementType}[array.Length];
//                    for (int i = 0; i < array.Length; i++)
//                    {{
//                        result.{property.Name}[i] = {elementType}Mapper.FromJson(array[i]);
//                    }}
//                }}
//                else
//                {{
//                    throw new JsonException($""Expected array but got {{{property.Name}Element.ValueKind}}"");
//                }}";
//        }

//        private static string GenerateReferenceTypeMapping(PropertyModel property)
//        {
//            return $@"                if ({property.Name}Element.ValueKind == JsonValueKind.Object)
//                {{
//                    result.{property.Name} = {property.TypeName}Mapper.FromJson({property.Name}Element);
//                }}
//                else
//                {{
//                    throw new JsonException($""Expected object but got {{{property.Name}Element.ValueKind}}"");
//                }}";
//        }
//    }

//}